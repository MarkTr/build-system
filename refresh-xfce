#!/bin/bash
#
# Copyright (C) 2008 Ken VanDine <ken@vandine.org>
# Copyright (c) 2008 Mark Trompell <mark@foresightlinux.org>
#
# Licensed under the GNU General Public License Version 2
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

usage() 
{
    echo "usage: refresh-xfce [update|build|bump]"
    exit
}

if [ $# -lt 1 ];
then
    usage
fi

if [ ! "$1" = "update" ] && [ ! "$1" = "build" ] && [ ! "$1" = "bump" ];
then
    usage
fi

action=$1
workingDir=$HOME/conary/src/xfce-devel
currentDir=`pwd`
context="xfce:devel"

# give "goodies" as argument if you want to build goodies
update()
{
    local repo="http://svn.xfce.org/svn/xfce/"
    if [ "$1" = "goodies" ]
    then
        troves=$goodies
        repo="http://svn.xfce.org/svn/goodies/"
    fi
    #echo "deleting any NEGATIVE cache in your cache dir"
    #rm -rf $HOME/conary/cache/NEGATIVE
    cd $workingDir
    echo $troves | xargs cvc co
    for trove in $troves;
    do
        echo $trove "<--"
        module=`echo $trove | tr A-Z a-z`
        lastestVersion=`conary rq $trove:source=xfce.rpath.org@xfce:devel |awk -F '/' '{print $2}'|awk -F '-' '{print $1}'`
        lastestRevision=`/usr/bin/svn log -q --limit 1 $repo$module/trunk/ |grep -v '\-\-\-'|awk '{print $1}'`
        echo "Latest version of $trove in conary is: $lastestVersion"
        echo "Latest version of $module in svn is: $lastestRevision"
        if [ $lastestVersion != $lastestRevision ]
        then
            echo "refreshing $trove"
            cd $trove
            cvc refresh $trove--.tar.bz2
            cvc commit --message "New snapshot"
            cd - >/dev/null 2>&1
        fi
    done
    cd $currentDir
}
#Note each trove in this list needs to end with a ","
troves="gtk-xfce-engine,libexo,libxfce4util,libxfce4menu,libxfcegui4,xfce-utils,xfconf,thunar,xfce4-dev-tools,xfce4-panel,xfce4-session,xfce4-settings,xfdesktop,xarchiver,xfce4-mixer,orage,xfwm4,xfwm4-themes,"
goodies="xfburn,"
blacklist="gtk-xfce-engine,orage,"

blacklist=`echo "$blacklist" | sed "s/,/ /g"`
echo Current Black list includes:

for i in $blacklist;
do
    echo $i
    troves=`echo "$troves" | sed "s/$i,/ /g"`
    goodies=`echo "$goodies" | sed "s/$i,/ /g"`
done
troves=`echo "$troves" | sed "s/,/ /g"`
goodies=`echo "$goodies" | sed "s/,/ /g"`
if [ $action = "update" ];
then
    #echo "deleting any NEGATIVE cache in your cache dir"
    #rm -rf $HOME/conary/cache/NEGATIVE
#    cd $workingDir
#    echo $troves | xargs cvc co
#    for trove in $troves;
#    do
#        module=`echo $trove | tr A-Z a-z`
#        lastestVersion=`conary rq $trove:source=xfce.rpath.org@xfce:devel |awk -F '/' '{print $2}'|awk -F '-' '{print $1}'`
#        lastestRevision=`/usr/bin/svn log -q --limit 1 http://svn.xfce.org/svn/xfce/$module/trunk/ |grep -v '\-\-\-'|awk '{print $1}'`
#        echo "Latest version of $trove in conary is: $lastestVersion"
#        echo "Latest version of $module in svn is: $lastestRevision"
#        if [ $lastestVersion != $lastestRevision ]
#        then
#            echo "refreshing $trove"
#            cd $trove
#            cvc refresh $trove--.tar.bz2 
#            cvc commit --message "New snapshot"
#            cd - >/dev/null 2>&1
#        fi
#    done
#    cd $currentDir
update
update "goodies"

elif [ $action = "build" ];
then
    tobuild=""
    echo $troves
    for trove in $troves;
    do
        lastestBuiltVersion=`conary rq $trove=xfce.rpath.org@xfce:devel |awk -F '/' '{print $2}'|awk -F '-' '{print $1}'`
        lastestSourceVersion=`conary rq $trove:source=xfce.rpath.org@xfce:devel |awk -F '/' '{print $2}'|awk -F '-' '{print $1}'`
        if [ -z "$lastestSourceVersion" ] || [ -z $lastestBuiltVersion ]
        then
            echo "Either source or binary version of $trove is unknown"
            tobuild="$tobuild,$trove"
        elif [ $lastestSourceVersion != $lastestBuiltVersion ]
        then
            echo "Latest source version of $trove is: $lastestSourceVersion"
            echo "Latest built version of $trove is: $lastestBuiltVersion"
            tobuild="$tobuild $trove\{x86_64\} $trove\{x86\}"
#            tobuild="$tobuild,$trove"
        fi
    done
    echo "building $tobuild"

#    jobId=` rmake build --quiet --no-watch --context $context $tobuild\{x86\} $tobuild\{x86_64\}`
    #jobId=` rmake build --quiet --no-watch --context $context \{$tobuild\}\[\'~!builddocs\'\]\{x86\}`
    jobId=`echo $tobuild | xargs rmake build --quiet --no-watch --context $context`
    #jobId=2102
    echo "Your Job ID is $jobId"
    status=`rmake q $jobId | grep $jobId | awk '{print $2}'`
    while [ $status = "Started" ];
    do
        sleep 300
        status=`rmake q $jobId | grep $jobId | awk '{print $2}'`
    done
    if [ $status = "Built" ];
    then
        rmake commit $jobId
    else
        echo "Build $jobId Failed"
        rmake commit $jobId
    fi
elif [ $action = "bump" ];
then
    cd $workingDir
    echo "Bumping group version"
    cvc co --context $context group-world
    cd group-world
    echo "" >> group-world.recipe
    cvc commit --context $context --message "Group bump"
    echo "Group version bumped"
    echo "Cooking group-world"
    ./cook.sh
    cd $currentDir
fi

